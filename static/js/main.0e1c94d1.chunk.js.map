{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","components/hooks/useForm.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JouernalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","collection","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewnote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","e","console","log","message","logout","LoginScreen","useDispatch","useSelector","formValues","isFormValid","validator","isEmail","length","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","key","Sidebar","signOut","newNote","Date","getTime","add","NothingSelected","NotesAppBar","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","JournalScreen","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","localStorage","setItem","location","pathname","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0e1c94d1.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n    \r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set error',\r\n    uiRemoveError: '[UI] Remove error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","/*\r\n    {\r\n        notes: [],\r\n        active: null //pantalla morad\r\n        active: {\r\n            id: 'asdfghgfdsa',\r\n            title: '',\r\n            imageUrl: '',\r\n            date: 452112\r\n        }\r\n    }\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesLoad:\r\n            //console.log(action.payload); se observa q es retorna una promesa y por ello se pone async/await en AppRouter\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        \r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                    ? action.payload.note\r\n                    : note\r\n                )\r\n            };\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            };\r\n\r\n        case types.notesLogoutCleaning:\r\n        return {\r\n            ...state,\r\n            active: null,\r\n            notes: []\r\n        };\r\n\r\n        case types.notesAddNew:\r\n        return {\r\n            ...state,\r\n            notes: [action.payload, ...state.notes ]\r\n        };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\n//ui user interface\r\nexport const uiReducer = (state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        \r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","//tiene observables\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n    );","\r\n/* Cuando este autenticado\r\n    {\r\n        uid: 'jajkndxsdfsj12',  //luego MERN\r\n        name: 'Claudia'\r\n    }   \r\n    y vacio cuando no\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCi--C7aAoxtwxF64xp5lhoE_NHscBtLIA\",\r\n    authDomain: \"react-app-cursos-82999.firebaseapp.com\",\r\n    databaseURL: \"https://react-app-cursos-82999.firebaseio.com\",\r\n    projectId: \"react-app-cursos-82999\",\r\n    storageBucket: \"react-app-cursos-82999.appspot.com\",\r\n    messagingSenderId: \"798845669229\",\r\n    appId: \"1:798845669229:web:9fa272e1324de089819464\"\r\n  };\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    //para borrar los datos del input\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n    const handleInputChange = ( {target} ) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","\r\nexport const fileUpload = async( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dhukjzoym/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n       const resp = await fetch(cloudUrl, {\r\n           method: 'POST',\r\n           body: formData\r\n       })\r\n       \r\n       if(resp.ok) {\r\n           const cloudResp = await resp.json();\r\n           return cloudResp.secure_url;\r\n       } else {\r\n           throw await resp.json();\r\n       }\r\n\r\n    } catch (err) {\r\n        throw err;\r\n        \r\n    }\r\n\r\n    //return url;\r\n}\r\n\r\n","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async(uid) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    //para obtener arreglo de notes de FB\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    //console.log(notes);\r\n    return notes;\r\n}\r\n\r\n\r\n","import Swal from 'sweetalert2';\r\n\r\nimport {db} from '../firebase/firebase-config';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { types } from '../types/types';\r\n\r\n//react-journal\r\n\r\nexport const startNewNote = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n        //console.log(uid);\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        //docRef\r\n        //en fb reglas allow read, write: if true\r\n        //allow read, write: if request.auth != null;\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n        console.log(doc);\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewnote(doc.id, newNote));\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewnote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const startLoadinNotes = ( uid ) => {\r\n    return async(dispatch) => {\r\n\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes(notes) )\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        //uid del usuario\r\n        const { uid } = getState().auth;\r\n\r\n        if( !note.url ) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = {...note}; //es un clone de note\r\n        delete noteToFirestore.id; //borrando el id para q no se grabe en la actualizacion\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n        dispatch( refreshNote( note.id , noteToFirestore ) );\r\n        Swal.fire('Guardado', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = (file ) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const { active: activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Subiendo imagen',\r\n            text: 'Por favor espere...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n        \r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        dispatch(startSaveNote(activeNote));\r\n\r\n        //console.log(fileUrl);\r\n        Swal.close();\r\n        \r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async(dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch( deleteNote(id) );\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning,\r\n});","import { types } from \"../types/types\";\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading  = () => ({\r\n    type: types.uiStartLoading,\r\n});\r\n\r\nexport const finishLoading   = () => ({\r\n    type: types.uiFinishLoading,\r\n});","//funciones\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from \"../types/types\";\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\n//una accion que dispara otra accion cuando se resuelva la tarea asincrona\r\nexport const startLoginEmailPassword = ( email, password ) => {\r\n    return (dispatch) => {\r\n        \r\n        dispatch( startLoading() )\r\n        // setTimeout( () => {\r\n        //     dispatch( login(123456, 'Vere') );\r\n        // }, 3500 );\r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then( ({user}) => {\r\n                dispatch(\r\n                    login( user.uid , user.displayName )\r\n                )\r\n                dispatch( finishLoading () )\r\n            }).catch( e => {\r\n                console.log(e);\r\n                dispatch( finishLoading ());\r\n                Swal.fire('Error', e.message, 'error')\r\n            })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async({user}) => {\r\n\r\n                await user.updateProfile({ displayName: name });\r\n                //console.log(user);\r\n                dispatch(\r\n                    login( user.uid , user.displayName )\r\n                )\r\n            }).catch( e => {\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error')\r\n            })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({user}) => {\r\n                    dispatch(\r\n                        login( user.uid , user.displayName )\r\n                    )\r\n                })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n    }\r\n});\r\n\r\nexport const startlogout = () => {\r\n    return async(dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react';\r\n\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm';\r\n//import { login } from '../../actions/auth';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector( state => state.ui );\r\n\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        \r\n\r\n        //dispatch( login(12345, 'Clau'));\r\n        dispatch( startLoginEmailPassword(email, password));\r\n        \r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n\r\n        if(isFormValid() ) {\r\n            console.log('valido');\r\n            dispatch( startGoogleLogin() );\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if( !validator.isEmail(email) ) {\r\n            console.log('email no es valido');\r\n            return false;\r\n        } else if( password.length <5 ) {\r\n            console.log('password debe tener al menos 6 caracter');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className='auth_tittle' >Ingresar</h3>\r\n\r\n            <form\r\n                onSubmit={ handleLogin }\r\n                className='animate__animated animate__fadeIn animate__faster'\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='Correo'\r\n                    autoComplete='off'\r\n                    name=\"email\"\r\n                    className='auth_input'\r\n                    value= {email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder='Contraseña'\r\n                    name=\"password\"\r\n                    className='auth_input'\r\n                    value= {password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className='btn btn-primary btn-block'\r\n                    type='submit'\r\n                    disabled={loading}\r\n                    \r\n                >\r\n                    Ingresar\r\n                </button>\r\n                \r\n                <div className='auth__social-networks' >\r\n                    <p>Ingresa con Google</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link\r\n                    to='/auth/register'\r\n                    className='link'\r\n                >\r\n                    Crear una nueva cuenta\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../hooks/useForm';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n    //console.log(msgError);\r\n\r\n    const [ formValues, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    })\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        console.log(name, email, password, password2);\r\n        \r\n        if(isFormValid() ) {\r\n            console.log('valido');\r\n            dispatch( startRegisterWithEmailPasswordName( email, password, name ) )\r\n        }\r\n    }\r\n    \r\n    const isFormValid = () => {\r\n\r\n        if( name.trim().length === 0 ) {\r\n            console.log('nombre es requerido');\r\n            dispatch( setError('nombre es requerido'));\r\n            return false;\r\n        } else if( !validator.isEmail(email) ) {\r\n            console.log('email no es valido');\r\n            dispatch( setError('email no es valido'));\r\n            return false;\r\n        } else if( password !== password2 || password.length <5 ) {\r\n            console.log('password deberia tener al menos 6 caracter y coincidir ');\r\n            dispatch( setError('password deberia tener al menos 6 caracter y coincidir '));\r\n            return false;\r\n        }\r\n        dispatch( removeError());\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className='auth_tittle' >Registrar</h3>\r\n\r\n            <form \r\n                onSubmit={handleRegister}\r\n                className='animate__animated animate__fadeIn animate__faster'\r\n            >\r\n\r\n                {\r\n                    msgError&&\r\n                    (\r\n                        <div className='auth__alert-error' >\r\n                        {msgError}\r\n                        </div>\r\n                    )\r\n                    \r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='Nombre'\r\n                    autoComplete='off'\r\n                    name=\"name\"\r\n                    className='auth_input'\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='Correo'\r\n                    autoComplete='off'\r\n                    name=\"email\"\r\n                    className='auth_input'\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder='Contraseña'\r\n                    name=\"password\"\r\n                    className='auth_input'\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder='Confirmar contraseña'\r\n                    name=\"passaword2\"\r\n                    className='auth_input'\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className='btn btn-primary btn-block mb-5'\r\n                    type='submit'\r\n                >\r\n                    Regístrate\r\n                </button>\r\n\r\n                <Link\r\n                    to='/auth/login'\r\n                    className='link'\r\n                >\r\n                    Ya estás registrado?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n            <div className='auth_main'>\r\n                <div className=\"auth_box-container\">\r\n                    <Switch>\r\n                        <Route\r\n                            exact \r\n                            path=\"/auth/login\"\r\n                            component={ LoginScreen }\r\n                        />\r\n\r\n                        <Route\r\n                            exact \r\n                            path=\"/auth/register\"\r\n                            component={ RegisterScreen } \r\n                        />\r\n                        \r\n                        <Redirect to=\"/auth/login\" />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ( { id, date, title, body, url } ) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const noteDate = moment(date);\r\n    //console.log(noteDate);\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, { id, date, title, body, url }));\r\n    };\r\n\r\n    return (\r\n        <div \r\n            className='journal__entry animate__animated animate__fadeIn animate__faster'\r\n            onClick={handleEntryClick}\r\n        >\r\n            {\r\n                url &&\r\n                <div\r\n                    className='journal__entry-picture'\r\n                    style={{\r\n                        backgroundSize:'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                >\r\n                </div>\r\n            }\r\n\r\n            <div \r\n                className='journal__entry-body'\r\n            >\r\n                <p className='journal__entry-title'>\r\n                    {title}\r\n                </p>\r\n                <p className='journal__entry-content'>\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className='journal__entry-date-box'>\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('D')}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector ( state => state.notes );\r\n    //console.log(notes);\r\n\r\n    return (\r\n        <div className='journal__entries'>\r\n            {   \r\n                (notes)&&\r\n                notes.map( note => (\r\n                    <JournalEntry\r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startlogout } from '../../actions/auth';\r\nimport { JournalEntries } from './JouernalEntries';\r\nimport { startNewNote } from '../../actions/notes'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startlogout());\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className='journal__sidebar'>\r\n            \r\n            <div className='journal__sidebar-navbar'>\r\n                <h3 className='mt-5' >\r\n                    <i className='far fa-moon' ></i>\r\n                    <span> { name }</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className='btn'\r\n                    onClick={handleLogout}\r\n                >\r\n                    Salir\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className='journal__new-entry'\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className='far fa-calendar-plus fa-5x'></i>\r\n                <p className='mt-5' >Nueva publicación</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className='nothing__main-content' >\r\n            <p>\r\n                Selecciona una nueva\r\n                <br/>\r\n                publicación para iniciar a crear.\r\n            </p>\r\n\r\n            <i className='far fa-star fa-4x mt-5'></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const date = new Date().getTime();\r\n    const noteDate = moment(date);\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote(active) )\r\n    }\r\n\r\n    const handlePicture = () => {\r\n        //simular clic en seleccionar archivo q esta en display none\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if(file) {\r\n            dispatch( startUploading(file) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='notes__appbar'>\r\n            <span>{noteDate.format('D MMMM YYYY')}</span>\r\n\r\n            <input\r\n                id='fileSelector'\r\n                type=\"file\"\r\n                style= { {display:'none'} }\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button\r\n                    className='btn'\r\n                    onClick={ handlePicture }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button\r\n                    className='btn'\r\n                    onClick= {handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nimport { NotesAppBar } from './NotesAppBar';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note } = useSelector( state => state.notes );\r\n    const [ formValues, handleInputChange, reset ] = useForm( note ); \r\n    const { body, title } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n        \r\n        if(note.id !== activeId.current ){\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(activeNote(formValues.id, {...formValues}))\r\n\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting(formValues.id) );\r\n    }\r\n\r\n    return (\r\n        <div className='notes__main-content' >\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className='notes__content'>\r\n                \r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='título'\r\n                    className='notes__title-input'\r\n                    autoComplete='off'\r\n                    name='title'\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder='¿Qué pasó hoy?'\r\n                    className='notes__textarea'\r\n                    name='body'\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                >\r\n                </textarea>\r\n\r\n                {\r\n                    (note.url) &&\r\n                    <div className='notes__image'>\r\n                        <img\r\n                            src={note.url}\r\n                            alt=\"imagen de fondo\"\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n            <button\r\n                className='btn btn-danger'\r\n                onClick={ handleDelete }\r\n            >\r\n                Cerrar\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { Sidebar } from './Sidebar';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div\r\n            className='journal__main-content animate__animated animate__fadeIn animate__faster'\r\n            >\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                    ? <NoteScreen />\r\n                    : <NothingSelected />\r\n                }\r\n\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'; //impt\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( !isAuthenticated )\r\n                ? <Component {...props}  />\r\n                : <Redirect to='/' /> // evitar bucle infinito si fuera a login\r\n            )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'; //impt\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    // console.log(rest.location.pathname);\r\n    localStorage.setItem('lastPath', (rest.location.pathname ));\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                ? <Component {...props}  />\r\n                : <Redirect to='/auth/login' />\r\n            )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n\r\nimport { firebase } from '../firebase/firebase-config';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { startLoadinNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        //crea un observable cuando cambia el estado\r\n        firebase.auth().onAuthStateChanged( (user) => {\r\n            if( user?.uid ){\r\n                dispatch(login( user.uid , user.displayName));\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch( startLoadinNotes(user.uid ) );\r\n\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n            setChecking(false);\r\n        });\r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n    if ( checking ) {\r\n        return (\r\n            <h1>Espere...</h1>\r\n        )\r\n    }\r\n    \r\n    return (\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute\r\n                            path='/auth'\r\n                            component={ AuthRouter }\r\n                            isAuthenticated={isLoggedIn}\r\n                        />\r\n                        <PrivateRoute\r\n                            exact path='/'\r\n                            component={ JournalScreen }\r\n                            isAuthenticated={isLoggedIn}\r\n                        />\r\n                        <Redirect to=\"/auth/login\" />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n            \r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nimport './styles/styles.scss';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store = {store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}